# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import tcvectordb.rpc.proto.olama_pb2 as olama__pb2


class SearchEngineStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.cluster_setting = channel.unary_unary(
                '/olama.SearchEngine/cluster_setting',
                request_serializer=olama__pb2.UpdateClusterSettingRequest.SerializeToString,
                response_deserializer=olama__pb2.UpdateClusterSettingResponse.FromString,
                )
        self.get_cluster_state = channel.unary_unary(
                '/olama.SearchEngine/get_cluster_state',
                request_serializer=olama__pb2.GetClusterStateRequest.SerializeToString,
                response_deserializer=olama__pb2.GetClusterStateResponse.FromString,
                )
        self.setAlias = channel.unary_unary(
                '/olama.SearchEngine/setAlias',
                request_serializer=olama__pb2.AddAliasRequest.SerializeToString,
                response_deserializer=olama__pb2.UpdateAliasResponse.FromString,
                )
        self.getAlias = channel.unary_unary(
                '/olama.SearchEngine/getAlias',
                request_serializer=olama__pb2.GetAliasRequest.SerializeToString,
                response_deserializer=olama__pb2.GetAliasResponse.FromString,
                )
        self.deleteAlias = channel.unary_unary(
                '/olama.SearchEngine/deleteAlias',
                request_serializer=olama__pb2.RemoveAliasRequest.SerializeToString,
                response_deserializer=olama__pb2.UpdateAliasResponse.FromString,
                )
        self.createCollection = channel.unary_unary(
                '/olama.SearchEngine/createCollection',
                request_serializer=olama__pb2.CreateCollectionRequest.SerializeToString,
                response_deserializer=olama__pb2.CreateCollectionResponse.FromString,
                )
        self.dropCollection = channel.unary_unary(
                '/olama.SearchEngine/dropCollection',
                request_serializer=olama__pb2.DropCollectionRequest.SerializeToString,
                response_deserializer=olama__pb2.DropCollectionResponse.FromString,
                )
        self.truncateCollection = channel.unary_unary(
                '/olama.SearchEngine/truncateCollection',
                request_serializer=olama__pb2.TruncateCollectionRequest.SerializeToString,
                response_deserializer=olama__pb2.TruncateCollectionResponse.FromString,
                )
        self.describeCollection = channel.unary_unary(
                '/olama.SearchEngine/describeCollection',
                request_serializer=olama__pb2.DescribeCollectionRequest.SerializeToString,
                response_deserializer=olama__pb2.DescribeCollectionResponse.FromString,
                )
        self.listCollections = channel.unary_unary(
                '/olama.SearchEngine/listCollections',
                request_serializer=olama__pb2.ListCollectionsRequest.SerializeToString,
                response_deserializer=olama__pb2.ListCollectionsResponse.FromString,
                )
        self.save_index_model = channel.unary_unary(
                '/olama.SearchEngine/save_index_model',
                request_serializer=olama__pb2.SaveIndexModelRequest.SerializeToString,
                response_deserializer=olama__pb2.SaveIndexModelResponse.FromString,
                )
        self.get_index_model = channel.unary_unary(
                '/olama.SearchEngine/get_index_model',
                request_serializer=olama__pb2.GetIndexModelRequest.SerializeToString,
                response_deserializer=olama__pb2.GetIndexModelResponse.FromString,
                )
        self.updateCollection = channel.unary_unary(
                '/olama.SearchEngine/updateCollection',
                request_serializer=olama__pb2.UpdateCollectionRequest.SerializeToString,
                response_deserializer=olama__pb2.UpdateCollectionResponse.FromString,
                )
        self.rebuildIndex = channel.unary_unary(
                '/olama.SearchEngine/rebuildIndex',
                request_serializer=olama__pb2.RebuildIndexRequest.SerializeToString,
                response_deserializer=olama__pb2.RebuildIndexResponse.FromString,
                )
        self.move_shard = channel.unary_unary(
                '/olama.SearchEngine/move_shard',
                request_serializer=olama__pb2.MoveShardRequest.SerializeToString,
                response_deserializer=olama__pb2.MoveShardResponse.FromString,
                )
        self.reset_shard = channel.unary_unary(
                '/olama.SearchEngine/reset_shard',
                request_serializer=olama__pb2.ResetShardRequest.SerializeToString,
                response_deserializer=olama__pb2.ResetShardResponse.FromString,
                )
        self.delete_shard = channel.unary_unary(
                '/olama.SearchEngine/delete_shard',
                request_serializer=olama__pb2.DeleteShardRequest.SerializeToString,
                response_deserializer=olama__pb2.DeleteShardResponse.FromString,
                )
        self.migrate_collection = channel.unary_unary(
                '/olama.SearchEngine/migrate_collection',
                request_serializer=olama__pb2.MigrateRequest.SerializeToString,
                response_deserializer=olama__pb2.MigrateResponse.FromString,
                )
        self.info_node = channel.unary_unary(
                '/olama.SearchEngine/info_node',
                request_serializer=olama__pb2.InfoNodeRequest.SerializeToString,
                response_deserializer=olama__pb2.InfoNodeResponse.FromString,
                )
        self.remove_node = channel.unary_unary(
                '/olama.SearchEngine/remove_node',
                request_serializer=olama__pb2.RemoveNodeRequest.SerializeToString,
                response_deserializer=olama__pb2.RemoveNodeResponse.FromString,
                )
        self.tasks = channel.unary_unary(
                '/olama.SearchEngine/tasks',
                request_serializer=olama__pb2.TaskStateRequest.SerializeToString,
                response_deserializer=olama__pb2.TaskStateResponse.FromString,
                )
        self.upsert = channel.unary_unary(
                '/document/upsert',
                request_serializer=olama__pb2.UpsertRequest.SerializeToString,
                response_deserializer=olama__pb2.UpsertResponse.FromString,
                )
        self.update = channel.unary_unary(
                '/document/update',
                request_serializer=olama__pb2.UpdateRequest.SerializeToString,
                response_deserializer=olama__pb2.UpdateResponse.FromString,
                )
        self.query = channel.unary_unary(
                '/document/query',
                request_serializer=olama__pb2.QueryRequest.SerializeToString,
                response_deserializer=olama__pb2.QueryResponse.FromString,
                )
        self.search = channel.unary_unary(
                '/document/search',
                request_serializer=olama__pb2.SearchRequest.SerializeToString,
                response_deserializer=olama__pb2.SearchResponse.FromString,
                )
        self.dele = channel.unary_unary(
                '/document/delete',
                request_serializer=olama__pb2.DeleteRequest.SerializeToString,
                response_deserializer=olama__pb2.DeleteResponse.FromString,
                )
        self.range_search = channel.unary_unary(
                '/document/range_search',
                request_serializer=olama__pb2.SearchRequest.SerializeToString,
                response_deserializer=olama__pb2.SearchResponse.FromString,
                )
        self.sort = channel.unary_unary(
                '/olama.SearchEngine/sort',
                request_serializer=olama__pb2.SortRequest.SerializeToString,
                response_deserializer=olama__pb2.SortResponse.FromString,
                )
        self.explain = channel.unary_unary(
                '/olama.SearchEngine/explain',
                request_serializer=olama__pb2.ExplainRequest.SerializeToString,
                response_deserializer=olama__pb2.ExplainResponse.FromString,
                )
        self.createDatabase = channel.unary_unary(
                '/olama.SearchEngine/createDatabase',
                request_serializer=olama__pb2.DatabaseRequest.SerializeToString,
                response_deserializer=olama__pb2.DatabaseResponse.FromString,
                )
        self.dropDatabase = channel.unary_unary(
                '/olama.SearchEngine/dropDatabase',
                request_serializer=olama__pb2.DatabaseRequest.SerializeToString,
                response_deserializer=olama__pb2.DatabaseResponse.FromString,
                )
        self.listDatabases = channel.unary_unary(
                '/database/list',
                request_serializer=olama__pb2.DatabaseRequest.SerializeToString,
                response_deserializer=olama__pb2.DatabaseResponse.FromString,
                )
        self.describeDatabase = channel.unary_unary(
                '/olama.SearchEngine/describeDatabase',
                request_serializer=olama__pb2.DescribeDatabaseRequest.SerializeToString,
                response_deserializer=olama__pb2.DescribeDatabaseResponse.FromString,
                )


class SearchEngineServicer(object):
    """Missing associated documentation comment in .proto file."""

    def cluster_setting(self, request, context):
        """更新集群配置
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_cluster_state(self, request, context):
        """获取集群状态
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setAlias(self, request, context):
        """修改别名指向
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAlias(self, request, context):
        """查询别名指向
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteAlias(self, request, context):
        """删除别名指向
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createCollection(self, request, context):
        """创建索引
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def dropCollection(self, request, context):
        """删除索引
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def truncateCollection(self, request, context):
        """清空索引
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def describeCollection(self, request, context):
        """显示索引配置
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listCollections(self, request, context):
        """显示全部索引
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def save_index_model(self, request, context):
        """上传模型文件
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_index_model(self, request, context):
        """下载模型文件
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateCollection(self, request, context):
        """更新索引参数
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def rebuildIndex(self, request, context):
        """重建索引
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def move_shard(self, request, context):
        """迁移分片
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def reset_shard(self, request, context):
        """重置分片
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_shard(self, request, context):
        """删除分片
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def migrate_collection(self, request, context):
        """迁移索引
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def info_node(self, request, context):
        """查询单个节点信息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def remove_node(self, request, context):
        """立即移除指定节点
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def tasks(self, request, context):
        """查询任务状态
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def upsert(self, request, context):
        """写入向量
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
        """更新向量
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query(self, request, context):
        """查询向量
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def search(self, request, context):
        """KNN搜索
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def dele(self, request, context):
        """删除向量
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def range_search(self, request, context):
        """范围搜索
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sort(self, request, context):
        """指定候选集排序
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def explain(self, request, context):
        """explain
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createDatabase(self, request, context):
        """创建 database
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def dropDatabase(self, request, context):
        """删除 database
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listDatabases(self, request, context):
        """显示全部 database
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def describeDatabase(self, request, context):
        """显示数据库
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SearchEngineServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'cluster_setting': grpc.unary_unary_rpc_method_handler(
                    servicer.cluster_setting,
                    request_deserializer=olama__pb2.UpdateClusterSettingRequest.FromString,
                    response_serializer=olama__pb2.UpdateClusterSettingResponse.SerializeToString,
            ),
            'get_cluster_state': grpc.unary_unary_rpc_method_handler(
                    servicer.get_cluster_state,
                    request_deserializer=olama__pb2.GetClusterStateRequest.FromString,
                    response_serializer=olama__pb2.GetClusterStateResponse.SerializeToString,
            ),
            'setAlias': grpc.unary_unary_rpc_method_handler(
                    servicer.setAlias,
                    request_deserializer=olama__pb2.AddAliasRequest.FromString,
                    response_serializer=olama__pb2.UpdateAliasResponse.SerializeToString,
            ),
            'getAlias': grpc.unary_unary_rpc_method_handler(
                    servicer.getAlias,
                    request_deserializer=olama__pb2.GetAliasRequest.FromString,
                    response_serializer=olama__pb2.GetAliasResponse.SerializeToString,
            ),
            'deleteAlias': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteAlias,
                    request_deserializer=olama__pb2.RemoveAliasRequest.FromString,
                    response_serializer=olama__pb2.UpdateAliasResponse.SerializeToString,
            ),
            'createCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.createCollection,
                    request_deserializer=olama__pb2.CreateCollectionRequest.FromString,
                    response_serializer=olama__pb2.CreateCollectionResponse.SerializeToString,
            ),
            'dropCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.dropCollection,
                    request_deserializer=olama__pb2.DropCollectionRequest.FromString,
                    response_serializer=olama__pb2.DropCollectionResponse.SerializeToString,
            ),
            'truncateCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.truncateCollection,
                    request_deserializer=olama__pb2.TruncateCollectionRequest.FromString,
                    response_serializer=olama__pb2.TruncateCollectionResponse.SerializeToString,
            ),
            'describeCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.describeCollection,
                    request_deserializer=olama__pb2.DescribeCollectionRequest.FromString,
                    response_serializer=olama__pb2.DescribeCollectionResponse.SerializeToString,
            ),
            'listCollections': grpc.unary_unary_rpc_method_handler(
                    servicer.listCollections,
                    request_deserializer=olama__pb2.ListCollectionsRequest.FromString,
                    response_serializer=olama__pb2.ListCollectionsResponse.SerializeToString,
            ),
            'save_index_model': grpc.unary_unary_rpc_method_handler(
                    servicer.save_index_model,
                    request_deserializer=olama__pb2.SaveIndexModelRequest.FromString,
                    response_serializer=olama__pb2.SaveIndexModelResponse.SerializeToString,
            ),
            'get_index_model': grpc.unary_unary_rpc_method_handler(
                    servicer.get_index_model,
                    request_deserializer=olama__pb2.GetIndexModelRequest.FromString,
                    response_serializer=olama__pb2.GetIndexModelResponse.SerializeToString,
            ),
            'updateCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.updateCollection,
                    request_deserializer=olama__pb2.UpdateCollectionRequest.FromString,
                    response_serializer=olama__pb2.UpdateCollectionResponse.SerializeToString,
            ),
            'rebuildIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.rebuildIndex,
                    request_deserializer=olama__pb2.RebuildIndexRequest.FromString,
                    response_serializer=olama__pb2.RebuildIndexResponse.SerializeToString,
            ),
            'move_shard': grpc.unary_unary_rpc_method_handler(
                    servicer.move_shard,
                    request_deserializer=olama__pb2.MoveShardRequest.FromString,
                    response_serializer=olama__pb2.MoveShardResponse.SerializeToString,
            ),
            'reset_shard': grpc.unary_unary_rpc_method_handler(
                    servicer.reset_shard,
                    request_deserializer=olama__pb2.ResetShardRequest.FromString,
                    response_serializer=olama__pb2.ResetShardResponse.SerializeToString,
            ),
            'delete_shard': grpc.unary_unary_rpc_method_handler(
                    servicer.delete_shard,
                    request_deserializer=olama__pb2.DeleteShardRequest.FromString,
                    response_serializer=olama__pb2.DeleteShardResponse.SerializeToString,
            ),
            'migrate_collection': grpc.unary_unary_rpc_method_handler(
                    servicer.migrate_collection,
                    request_deserializer=olama__pb2.MigrateRequest.FromString,
                    response_serializer=olama__pb2.MigrateResponse.SerializeToString,
            ),
            'info_node': grpc.unary_unary_rpc_method_handler(
                    servicer.info_node,
                    request_deserializer=olama__pb2.InfoNodeRequest.FromString,
                    response_serializer=olama__pb2.InfoNodeResponse.SerializeToString,
            ),
            'remove_node': grpc.unary_unary_rpc_method_handler(
                    servicer.remove_node,
                    request_deserializer=olama__pb2.RemoveNodeRequest.FromString,
                    response_serializer=olama__pb2.RemoveNodeResponse.SerializeToString,
            ),
            'tasks': grpc.unary_unary_rpc_method_handler(
                    servicer.tasks,
                    request_deserializer=olama__pb2.TaskStateRequest.FromString,
                    response_serializer=olama__pb2.TaskStateResponse.SerializeToString,
            ),
            'upsert': grpc.unary_unary_rpc_method_handler(
                    servicer.upsert,
                    request_deserializer=olama__pb2.UpsertRequest.FromString,
                    response_serializer=olama__pb2.UpsertResponse.SerializeToString,
            ),
            'update': grpc.unary_unary_rpc_method_handler(
                    servicer.update,
                    request_deserializer=olama__pb2.UpdateRequest.FromString,
                    response_serializer=olama__pb2.UpdateResponse.SerializeToString,
            ),
            'query': grpc.unary_unary_rpc_method_handler(
                    servicer.query,
                    request_deserializer=olama__pb2.QueryRequest.FromString,
                    response_serializer=olama__pb2.QueryResponse.SerializeToString,
            ),
            'search': grpc.unary_unary_rpc_method_handler(
                    servicer.search,
                    request_deserializer=olama__pb2.SearchRequest.FromString,
                    response_serializer=olama__pb2.SearchResponse.SerializeToString,
            ),
            'dele': grpc.unary_unary_rpc_method_handler(
                    servicer.dele,
                    request_deserializer=olama__pb2.DeleteRequest.FromString,
                    response_serializer=olama__pb2.DeleteResponse.SerializeToString,
            ),
            'range_search': grpc.unary_unary_rpc_method_handler(
                    servicer.range_search,
                    request_deserializer=olama__pb2.SearchRequest.FromString,
                    response_serializer=olama__pb2.SearchResponse.SerializeToString,
            ),
            'sort': grpc.unary_unary_rpc_method_handler(
                    servicer.sort,
                    request_deserializer=olama__pb2.SortRequest.FromString,
                    response_serializer=olama__pb2.SortResponse.SerializeToString,
            ),
            'explain': grpc.unary_unary_rpc_method_handler(
                    servicer.explain,
                    request_deserializer=olama__pb2.ExplainRequest.FromString,
                    response_serializer=olama__pb2.ExplainResponse.SerializeToString,
            ),
            'createDatabase': grpc.unary_unary_rpc_method_handler(
                    servicer.createDatabase,
                    request_deserializer=olama__pb2.DatabaseRequest.FromString,
                    response_serializer=olama__pb2.DatabaseResponse.SerializeToString,
            ),
            'dropDatabase': grpc.unary_unary_rpc_method_handler(
                    servicer.dropDatabase,
                    request_deserializer=olama__pb2.DatabaseRequest.FromString,
                    response_serializer=olama__pb2.DatabaseResponse.SerializeToString,
            ),
            'listDatabases': grpc.unary_unary_rpc_method_handler(
                    servicer.listDatabases,
                    request_deserializer=olama__pb2.DatabaseRequest.FromString,
                    response_serializer=olama__pb2.DatabaseResponse.SerializeToString,
            ),
            'describeDatabase': grpc.unary_unary_rpc_method_handler(
                    servicer.describeDatabase,
                    request_deserializer=olama__pb2.DescribeDatabaseRequest.FromString,
                    response_serializer=olama__pb2.DescribeDatabaseResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'olama.SearchEngine', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SearchEngine(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def cluster_setting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/cluster_setting',
            olama__pb2.UpdateClusterSettingRequest.SerializeToString,
            olama__pb2.UpdateClusterSettingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_cluster_state(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/get_cluster_state',
            olama__pb2.GetClusterStateRequest.SerializeToString,
            olama__pb2.GetClusterStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def setAlias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/setAlias',
            olama__pb2.AddAliasRequest.SerializeToString,
            olama__pb2.UpdateAliasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAlias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/getAlias',
            olama__pb2.GetAliasRequest.SerializeToString,
            olama__pb2.GetAliasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteAlias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/deleteAlias',
            olama__pb2.RemoveAliasRequest.SerializeToString,
            olama__pb2.UpdateAliasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/createCollection',
            olama__pb2.CreateCollectionRequest.SerializeToString,
            olama__pb2.CreateCollectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def dropCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/dropCollection',
            olama__pb2.DropCollectionRequest.SerializeToString,
            olama__pb2.DropCollectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def truncateCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/truncateCollection',
            olama__pb2.TruncateCollectionRequest.SerializeToString,
            olama__pb2.TruncateCollectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def describeCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/describeCollection',
            olama__pb2.DescribeCollectionRequest.SerializeToString,
            olama__pb2.DescribeCollectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listCollections(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/listCollections',
            olama__pb2.ListCollectionsRequest.SerializeToString,
            olama__pb2.ListCollectionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def save_index_model(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/save_index_model',
            olama__pb2.SaveIndexModelRequest.SerializeToString,
            olama__pb2.SaveIndexModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_index_model(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/get_index_model',
            olama__pb2.GetIndexModelRequest.SerializeToString,
            olama__pb2.GetIndexModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/updateCollection',
            olama__pb2.UpdateCollectionRequest.SerializeToString,
            olama__pb2.UpdateCollectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def rebuildIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/rebuildIndex',
            olama__pb2.RebuildIndexRequest.SerializeToString,
            olama__pb2.RebuildIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def move_shard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/move_shard',
            olama__pb2.MoveShardRequest.SerializeToString,
            olama__pb2.MoveShardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def reset_shard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/reset_shard',
            olama__pb2.ResetShardRequest.SerializeToString,
            olama__pb2.ResetShardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete_shard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/delete_shard',
            olama__pb2.DeleteShardRequest.SerializeToString,
            olama__pb2.DeleteShardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def migrate_collection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/migrate_collection',
            olama__pb2.MigrateRequest.SerializeToString,
            olama__pb2.MigrateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def info_node(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/info_node',
            olama__pb2.InfoNodeRequest.SerializeToString,
            olama__pb2.InfoNodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def remove_node(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/remove_node',
            olama__pb2.RemoveNodeRequest.SerializeToString,
            olama__pb2.RemoveNodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def tasks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/tasks',
            olama__pb2.TaskStateRequest.SerializeToString,
            olama__pb2.TaskStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def upsert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/upsert',
            olama__pb2.UpsertRequest.SerializeToString,
            olama__pb2.UpsertResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/update',
            olama__pb2.UpdateRequest.SerializeToString,
            olama__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def query(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/query',
            olama__pb2.QueryRequest.SerializeToString,
            olama__pb2.QueryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/search',
            olama__pb2.SearchRequest.SerializeToString,
            olama__pb2.SearchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def dele(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/dele',
            olama__pb2.DeleteRequest.SerializeToString,
            olama__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def range_search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/range_search',
            olama__pb2.SearchRequest.SerializeToString,
            olama__pb2.SearchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sort(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/sort',
            olama__pb2.SortRequest.SerializeToString,
            olama__pb2.SortResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def explain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/explain',
            olama__pb2.ExplainRequest.SerializeToString,
            olama__pb2.ExplainResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createDatabase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/createDatabase',
            olama__pb2.DatabaseRequest.SerializeToString,
            olama__pb2.DatabaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def dropDatabase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/dropDatabase',
            olama__pb2.DatabaseRequest.SerializeToString,
            olama__pb2.DatabaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listDatabases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/listDatabases',
            olama__pb2.DatabaseRequest.SerializeToString,
            olama__pb2.DatabaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def describeDatabase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.SearchEngine/describeDatabase',
            olama__pb2.DescribeDatabaseRequest.SerializeToString,
            olama__pb2.DescribeDatabaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ProxyEngineStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.proxy = channel.unary_unary(
                '/olama.ProxyEngine/proxy',
                request_serializer=olama__pb2.HttpRequest.SerializeToString,
                response_deserializer=olama__pb2.HttpResponse.FromString,
                )


class ProxyEngineServicer(object):
    """Missing associated documentation comment in .proto file."""

    def proxy(self, request, context):
        """proxy
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProxyEngineServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'proxy': grpc.unary_unary_rpc_method_handler(
                    servicer.proxy,
                    request_deserializer=olama__pb2.HttpRequest.FromString,
                    response_serializer=olama__pb2.HttpResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'olama.ProxyEngine', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProxyEngine(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def proxy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/olama.ProxyEngine/proxy',
            olama__pb2.HttpRequest.SerializeToString,
            olama__pb2.HttpResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
